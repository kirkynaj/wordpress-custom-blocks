{"version":3,"file":"index.js","mappings":"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KAAK,EAAE5C,mDAAE,CAAC,2BAA2B,EAAE,UAAU;EAAE,GAEnDgE,iEAAA,CAACzD,6DAAU;IACVmE,WAAW,EAAG3C;IACd;IACA;IACA;IACA;EAAA,CACA,CACS,CACM,CACjB,CAAC;AAEN;;;;;;;;;;;;;;;;AC7NA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACA4C,oEAAiB,CAAEC,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAE5D,6CAAIA;AACX,CAAE,CAAC;;;;;;;;;;;AChCH;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://acf-meta/./src/edit.js","webpack://acf-meta/./src/index.js","webpack://acf-meta/./src/editor.scss?0339","webpack://acf-meta/./src/style.scss?75bd","webpack://acf-meta/external window [\"wp\",\"apiFetch\"]","webpack://acf-meta/external window [\"wp\",\"blockEditor\"]","webpack://acf-meta/external window [\"wp\",\"blocks\"]","webpack://acf-meta/external window [\"wp\",\"components\"]","webpack://acf-meta/external window [\"wp\",\"coreData\"]","webpack://acf-meta/external window [\"wp\",\"data\"]","webpack://acf-meta/external window [\"wp\",\"editor\"]","webpack://acf-meta/external window [\"wp\",\"element\"]","webpack://acf-meta/external window [\"wp\",\"i18n\"]","webpack://acf-meta/webpack/bootstrap","webpack://acf-meta/webpack/runtime/chunk loaded","webpack://acf-meta/webpack/runtime/compat get default export","webpack://acf-meta/webpack/runtime/define property getters","webpack://acf-meta/webpack/runtime/hasOwnProperty shorthand","webpack://acf-meta/webpack/runtime/make namespace object","webpack://acf-meta/webpack/runtime/jsonp chunk loading","webpack://acf-meta/webpack/before-startup","webpack://acf-meta/webpack/startup","webpack://acf-meta/webpack/after-startup"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\r\nimport { \r\n\tSelectControl, \r\n\tPanelBody, \r\n\tTextControl, \r\n\tButton, \r\n\tDatePicker, \r\n\tTextareaControl, \r\n\tRadioControl \r\n} from '@wordpress/components';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { store as editorStore } from '@wordpress/editor';\r\nimport { useEntityProp } from '@wordpress/core-data';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * Those files can contain any CSS code that gets applied to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport './editor.scss';\r\n\r\n/**\r\n * The edit function describes the structure of your block in the context of the\r\n * editor. This represents what the editor will render when the block is used.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\r\n *\r\n * @return {WPElement} Element to render.\r\n */\r\nexport default function Edit({attributes, setAttributes, context: { postType, postId }}) {\r\n\r\n\tconst {\r\n\t\tcustomFieldKey, \r\n\t\tmetaType, \r\n\t\tmetaKey, \r\n\t\tmetaValue, \r\n\t\tgenerateTitleField, \r\n\t\tradioButton,\r\n\t\tgetDateBlock } = attributes;\r\n\r\n\r\n\t//tutorial rest API\r\n\t\t//fix rest API path\r\n\t\t//save database\r\n\t\t//get data from rest API using useEffect\r\n\t\t//set local state\r\n\t\t//render local state\r\n\r\n\r\n\r\n\t// const postType = useSelect(\r\n\t// \t(select) => select(editorStore).getCurrentPostType(),\r\n\t// \t[]\r\n\t// );\r\n\t\r\n\t// const [nativeMeta, setNativeMeta] = useEntityProp('postType', postType, 'meta', postId);\r\n\t// const [acfMeta] = useEntityProp('postType', postType, 'acf');\r\n\tconst [date, setDate] = useState(new Date());\r\n\tconst [option, setOption] = useState(true);\r\n\tconst [generatedText, setGeneratedText] = useState();\r\n\tconst [textResult, setTextResult] = useState();\r\n\t\r\n\t// acf_meta_key\r\n\t// console.log({metaType}, {metaKey}, {metaValue});\r\n\t// console.log(date);\r\n\t// console.log('this is radio button =>', radioButton);\r\n\t\r\n\tconst handleClick = () => {\r\n\t\t\tapiFetch({path: '/wp/v2/Posts/25'}).then((posts) => {\r\n\t\t\t// console.log(posts?.title.rendered);\r\n\t\t\tsetGeneratedText(posts?.title.rendered);\r\n\t\t\tsetAttributes({ generateTitleField: generatedText });\r\n\t\t\t\r\n\t\t})\r\n\t};\r\n\t\r\n\tconsole.log('generated text =>', generatedText);\r\n\r\n\tconst {isSaving, edited, saved} = useSelect((select) => {\r\n\t\treturn{\r\n\t\t\tisSaving:  select('core/editor').isSavingPost(),\r\n\t\t\tedited:  select('core/editor').getEditedPostAttribute('customFieldKey'),\r\n\t\t\tsaved:  select('core/editor').getCurrentPostAttribute('customFieldKey')\r\n\t\t}\r\n\t});\r\n\r\n\t// const {savePost, editedPost, savedPost} = useSelect((select) => {\r\n\t// \treturn {\r\n\t// \t\tsavePost: select('core/editor').isSavingPost(),\r\n\t// \t\teditedPost: select('core/editor').getEditedPostAttribute('generateTitleField'),\r\n\t// \t\tsavedPost: select('core/editor').getCurrentPostAttribute('generateTitleField')\r\n\t// \t}\r\n\t// });\r\n\t// const {saveRadio, editedRadio, savedRadio} = useSelect((select) => {\r\n\t// \treturn {\r\n\t// \t\tsaveRadio: select('core/editor').isSavingPost(),\r\n\t// \t\teditedRadio: select('core/editor').getEditedPostAttribute('generateTitleField'),\r\n\t// \t\tsavedRadio: select('core/editor').getCurrentPostAttribute('generateTitleField')\r\n\t// \t}\r\n\t// });\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log({isSaving}, {edited}, {saved})\r\n\t\tif (isSaving) {\r\n\t\t\t\tapiFetch({\r\n\t\t\t\t\tpath: `wp/acf-meta-block/v1/custom-field-key/save`,\r\n    \t\t\tmethod: 'POST',\r\n    \t\t\tdata: {\r\n\t\t\t\t\t\tpost_id: wp.data.select('core/editor').getCurrentPostId(),\r\n      \t\t\tcustom_field_key: customFieldKey,\r\n    \t\t\t},\r\n\t\t\t}).then(res => console.log('result =>', res));\t\t\r\n\t\t} if (isSaving) {\r\n\t\t\tapiFetch({\r\n\t\t\t\tpath: `wp/acf-meta-block/v1/generate-title-field/save`,\r\n\t\t\t\tmethod: 'POST',\r\n    \t\t\tdata: {\r\n\t\t\t\t\t\tpost_id: wp.data.select('core/editor').getCurrentPostId(),\r\n      \t\t\tgenerate_title_field: generateTitleField,\r\n\t\t\t\t\t}\r\n\t\t\t}).then(res => console.log('result =>', res));\r\n\t\t} \r\n\t\tif (isSaving) {\r\n\t\t\tapiFetch({\r\n\t\t\t\tpath: `wp/acf-meta-block/v1/radio-button/save`,\r\n\t\t\t\tmethod: 'POST',\r\n    \t\t\tdata: {\r\n\t\t\t\t\t\tpost_id: wp.data.select('core/editor').getCurrentPostId(),\r\n      \t\t\tradio_button: radioButton,\r\n\t\t\t\t\t}\r\n\t\t\t}).then(res => console.log('result =>', res));\r\n\t\t}\r\n\t},[isSaving]);\r\n\r\n\t// console.log('this is the custom field key edit.js', customFieldKey)\r\n\r\n\t// const metaInfo = useSelect((select) => {\r\n\t// \treturn select('core/editor').getBlocks('');\r\n\t// });\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('result =>', metaInfo);\r\n\t// }, [metaInfo]);\r\n\r\n\t// we don't need the customFieldKey to the save.json\r\n\r\n\r\n\t\r\n\treturn (\r\n\t\t<p { ...useBlockProps() }>\r\n\t\t\t<h2>Result: { customFieldKey }</h2>\r\n\t\t\t<h3>Current Status: { radioButton }</h3>\r\n\r\n\t\t\t<InspectorControls>\r\n\t\t\t\t<PanelBody\r\n\t\t\t\t\ttitle={__('Custom Blocks', 'acf-meta')}\r\n\t\t\t\t\t\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <SelectControl\r\n\t\t\t\t\t\t\t\tlabel={__('Meta Key')}\r\n\t\t\t\t\t\t\t\tvalue={ metaType }\r\n\t\t\t\t\t\t\t\toptions={ [\r\n\t\t\t\t\t\t\t\t\t\t{ label: 'Custom Field', value: 'custom_field' },\r\n\t\t\t\t\t\t\t\t\t\t{ label: 'Custom Text', value: 'custom_text' },\r\n\t\t\t\t\t\t\t\t] }\r\n\t\t\t\t\t\t\t\tonChange={ ( newType ) => setAttributes( { metaType: newType } ) }\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\t\t\tlabel=\"Meta Block Field\"\r\n\t\t\t\t\t\t\t\thelp=\"Click button to generate post title\"\r\n\t\t\t\t\t\t\t\tvalue={ generatedText }\r\n\t\t\t\t\t\t\t\t// onChange={() => setAttributes({ generateTitleField: generatedText })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={()=>handleClick()}\r\n\t\t\t\t\t\t\t>Generate</Button>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\t\tlabel={ customFieldKey === \"\" ?  __(\"Custom Text Input\") : customFieldKey}\r\n\t\t\t\t\t\t\tplaceholder='Change Label Here'\r\n\t\t\t\t\t\t\tvalue={customFieldKey}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tsetAttributes({ customFieldKey: value })\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\tlabel=\"Custom Radio Button\"\r\n\t\t\t\t\t\t\tselected={ radioButton }\r\n\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t{label: 'True', value: 1},\r\n\t\t\t\t\t\t\t\t\t{label:'False', value: 0},\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t// onChange={(value) => setOption(value)}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tsetAttributes({ radioButton: value })\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t<PanelBody\r\n\t\t\t\t\t\ttitle={__('Custom Blocks Date Picker', 'acf-meta')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tcurrentDate={ date }\r\n\t\t\t\t\t\t\t// onChange={ (newDate) => setDate(newDate) }\r\n\t\t\t\t\t\t\t// onChange={(value) => {\r\n\t\t\t\t\t\t\t// \tsetAttributes({ getDateBlock: new Date(value) })\r\n\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelBody>\r\n\t\t\t</InspectorControls>\r\n\t\t</p>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkacf_meta\"] = globalThis[\"webpackChunkacf_meta\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","SelectControl","PanelBody","TextControl","Button","DatePicker","TextareaControl","RadioControl","useSelect","useDispatch","store","editorStore","useEntityProp","useState","useEffect","apiFetch","Edit","attributes","setAttributes","context","postType","postId","customFieldKey","metaType","metaKey","metaValue","generateTitleField","radioButton","getDateBlock","date","setDate","Date","option","setOption","generatedText","setGeneratedText","textResult","setTextResult","handleClick","path","then","posts","title","rendered","console","log","isSaving","edited","saved","select","isSavingPost","getEditedPostAttribute","getCurrentPostAttribute","method","data","post_id","wp","getCurrentPostId","custom_field_key","res","generate_title_field","radio_button","createElement","label","help","value","variant","onClick","placeholder","onChange","selected","options","currentDate","registerBlockType","metadata","name","edit"],"sourceRoot":""}